from datetime import date

from aiogram import types

from loader import executor


async def about_keyboard(user_id: int, today: date, message_id: id = False) -> None:
    """
    Creating profile menu
    '''
        Your profile?
    ‚îå-----------------‚îê
    |     Change      |
    ‚îî-----------------‚îò
    ‚îå-----------------‚îê
    |   Set default   |
    ‚îî-----------------‚îò
    ‚îå-----------------‚îê
    |     Delete      |
    ‚îî-----------------‚îò
    ‚îå-----------------‚îê
    |    Calendar     |
    ‚îî-----------------‚îò
    ‚îå-----------------‚îê
    |    Main menu    |
    ‚îî-----------------‚îò
    ‚îå-----------------‚îê
    |     Close       |
    ‚îî-----------------‚îò
    '''
    """
    user = await executor.get_user(user_id=user_id)
    date = user.first_menstruation

    text = (
        "–¢–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å:\n–ü–µ—Ä—à–∏–π –¥–µ–Ω—å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –º–µ–Ω—Å—Ç—Ä—É–∞—Ü—ñ—ó -"
        f" {date.day}.{date.month}.{date.year}\n–°–µ—Ä–µ–¥–Ω—è —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Ü–∏–∫–ª—É -"
        f" {await executor.custom_round(user.cycle_duration/user.cycle_amount)}\n–°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å"
        " –º—ñ—Å—è—á–Ω–∏—Ö -"
        f" {await executor.custom_round(user.periods_amount/user.cycle_amount)}\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ü–∏–∫–ª—ñ–≤"
        f" —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è - {user.cycle_amount - 1}"
    )

    text += (
        f"\n–í–∏—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Ü–∏–∫–ª—É - {user.default_cycle_duration}"
        if user.default_cycle_duration
        else ""
    )
    text += (
        f"\n–í–∏—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—è—á–Ω–∏—Ö - {user.default_periods_amount}"
        if user.default_periods_amount
        else ""
    )

    delay_days = await executor.get_delay(user_id=user_id, today=today)

    if delay_days:
        text += f"\n–ó–∞—Ç—Ä–∏–º–∫–∞ - {delay_days}"

    buttons = [
        [
            types.InlineKeyboardButton(
                text=f"„Ö§    üñä –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ„Ö§„Ö§„Ö§",
                callback_data=f"about_change",
            ),
        ],
        [
            types.InlineKeyboardButton(
                text=f"„Ö§ üõ†Ô∏è –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–æ—Å—Ç—ñ–π–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è",
                callback_data=f"about_default",
            ),
        ],
        [
            types.InlineKeyboardButton(
                text=f"„Ö§  üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é„Ö§„Ö§",
                callback_data=f"about_reset",
            ),
        ],
        [
            types.InlineKeyboardButton(
                text="„Ö§  üìÖ –í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§", callback_data="menu_calendar"
            )
        ],
        [
            types.InlineKeyboardButton(
                text="„Ö§„Ö§   üìã –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é", callback_data="menu_open"
            )
        ],
        [
            types.InlineKeyboardButton(
                text=f"„Ö§„Ö§‚ùå  –ó–∞–∫—Ä–∏—Ç–∏ –º–µ–Ω—é„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§",
                callback_data=f"menu_close",
            ),
        ],
    ]

    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)

    # Change message
    if message_id:
        await executor.bot.edit_message_text(
            chat_id=user_id, message_id=message_id, text=text, reply_markup=keyboard
        )
    # Or send new
    else:
        answer = await executor.bot.send_message(chat_id=user_id, text=text, reply_markup=keyboard)
        await executor.remember_message(user_id=user_id, message_id=answer.message_id)
